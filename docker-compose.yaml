version: '3.8'
services:
  nginx:
    build:
      context: ./services/nginx
      dockerfile: Dockerfile
      args:
        TZ: ${TZ}
        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
    container_name: nginx-gateway
    restart: always
    ports:
      - "480:80"
      - "4443:443"
    volumes:
      - ./services/nginx/conf.d:/etc/nginx/conf.d
      - ./logs/nginx:/var/log/nginx
    networks:
      - gateway-network

  redis:
    image: redis:6.2-alpine
    restart: always
    ports:
      - "46379:6379"
    volumes:
      - "./services/redis/config:/etc/redis"  # 配置文件
      - "./data/redis:/data"                 # 数据文件
      - "./logs/redis/:/var/log/redis"        # 日志文件
    environment:
      - "TZ=${TZ}"
    entrypoint: [ "redis-server", "/etc/redis/docker.conf", "--requirepass", "${REDIS_PASSWORD}" ]
    networks:
      - gateway-network

  mysql:
    image: mysql:${MYSQL_VERSION}
    ports:
      - "${MYSQL_HOST_PORT}:3306"
    volumes:
      - ${MYSQL_CONF_FILE}:/etc/mysql/conf.d/mysql.cnf:ro
      - ${DATA_DIR}/mysql:/var/lib/mysql/:rw
      - ${MYSQL_LOG_DIR}:/var/log/mysql/:rw

    restart: always
    networks:
      - gateway-network
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      MYSQL_ROOT_HOST: "${MYSQL_ROOT_HOST}"
      TZ: "$TZ"

  mysql5:
    image: mysql:${MYSQL5_VERSION}
    ports:
      - "${MYSQL5_HOST_PORT}:3306"
    volumes:
      - ${MYSQL5_CONF_FILE}:/etc/mysql/conf.d/mysql.cnf:ro
      - ${DATA_DIR}/mysql5:/var/lib/mysql/:rw
      - ${MYSQL5_LOG_DIR}:/var/log/mysql/:rw
    restart: always
    networks:
      - gateway-network
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL5_ROOT_PASSWORD}"
      MYSQL_ROOT_HOST: "${MYSQL5_ROOT_HOST}"
      TZ: "$TZ"

  typesetting_client:
    build:
      context: ./services/typesetting/client
      dockerfile: Dockerfile
      args:
        TYPESETTING_CLIENT_IMAGE: ${TYPESETTING_CLIENT_IMAGE}
    volumes:
      - ./services/typesetting/client/conf:/etc/nginx
      - ./logs/typesetting/client:/var/log/nginx
      - ./www/typesetting/client:/www/typesetting_client

  typesetting_server:
    build:
      context: ./services/typesetting/server
      dockerfile: Dockerfile
      args:
        TYPESETTING_SERVER_IMAGE: ${TYPESETTING_SERVER_IMAGE}
    volumes:
      - ./services/typesetting/server/conf:/etc/nginx
      - ./www/typesetting/server:/www/typesetting
networks:
  gateway-network:
    driver: bridge
